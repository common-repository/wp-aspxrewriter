=== Plugin Name ===
Contributors: Martin2006
Donate link: http://www.the-mice.co.uk/switch/
Tags: IIS, rewrite, mod_rewrite
Requires at least: 2.3
Tested up to: 2.5
Stable tag: trunk

This plugin will allow 100% pretty permalinks on IIS 6/7.

== Description ==

Fed up with IIS not providing permalinks? Don't have access to the IIS control panel on your host? Then wp-aspxrewriter is for you!

Allowing URLS such as: http://www.pynchon.net/discourse/2008/03/06/24/two-amusing-pynchon-posts.aspx this is the easiest way to enable completely pretty permalinks on IIS 6 or IIS 7.

== Installation ==

The plugin consists of two components:

1. A standard Wordpress plugin.
2. An ASP.NET HttpModule.

To install:

1. Upload the wp-aspxrewriter folder to the `/wp-content/plugins/` directory
2. Upload the URLRewriteModule to your IIS /bin/ directory
3. If you are using Wordpress 2.3 or 2.4, modify your source code to contain the additional hook that is implemented at http://trac.wordpress.org/ticket/5969 that will feature in 2.5. Hint: it's in function get_pagenum_link.
4. Activate the plugin through the 'Plugins' menu in WordPress
5. Create your desired permalink structure on Options -> Permalinks, ensuring that it ends with .aspx. 

eg. /%year%/%monthnum%/%day%/%post_id%/%postname%.aspx

Recommended bases are:

/word-category
/word-tag

6. Navigate to Manage -> ASPX Rewriter in the admin control panel and copy the setup that is shown
7. Modify or create a web.config file that contains the following under `<configuration>`:

`<configSections>
    <sectionGroup name="RewriterConfig">
      <section name="RewriterRules" type="System.Configuration.NameValueSectionHandler" />
      <section name="RedirectRules" type="System.Configuration.NameValueSectionHandler" />
      <section name="Bans" type="System.Configuration.NameValueSectionHandler" />
    </sectionGroup>
  </configSections>
  
  <RewriterConfig>
    <RewriterRules>
      <add value="http://www.pynchon.net/discourse/?p=$3" key="http://www.pynchon.net/discourse/recourse-([0-9]{4})\-([0-9]{1,2})\-([0-9]{1,4})\-(.+)\.aspx$" />
      <add value="http://www.pynchon.net/discourse/?tag=$1" key="http://www.pynchon.net/discourse/recourse-tag/([^\.]+)\.aspx$" />
      <add value="http://www.pynchon.net/discourse/?cat=$1" key="http://www.pynchon.net/discourse/recourse-category/([^\.]+)\.aspx$" />
      <add value="http://www.pynchon.net/discourse/wp-trackback.php?p=$3" key="http://www.pynchon.net/discourse/recourse-([0-9]{4})\-([0-9]{1,2})\-([0-9]{1,4})\-([^\-]+)\-trackback\.aspx$" />
      <add value="http://www.pynchon.net/discourse/?feed=$1" key="http://www.pynchon.net/discourse/feed\-([^.]+)\.aspx$" />
      <add value="http://www.pynchon.net/discourse/?feed=$1" key="http://www.pynchon.net/discourse/feed/[^\-]+\-([^.]+)\.aspx$" />
      <add value="http://www.pynchon.net/discourse/wp-commentsrss2.php" key="http://www.pynchon.net/discourse/comments/feed\-([^.]+)\.aspx$" />
      <add value="http://www.pynchon.net/discourse/?feed=rss2&amp;p=$3" key="http://www.pynchon.net/discourse/recourse-([0-9]{4})\-([0-9]{1,2})\-([0-9]{1,4})\-(.+)\.aspx/feed" />
      <add value="http://www.pynchon.net/discourse/?m=$1$2" key="http://www.pynchon.net/discourse/recourse-date/([0-9]{4})/([0-9]{2}).aspx$" />
    </RewriterRules>
    <RedirectRules>
    </RedirectRules>
    <Bans>
    </Bans>
  </RewriterConfig>`

replacing all the values in `<RewriterRules>` with the configuration generated by you in stage 6.

Add the following line to

8. Add the following to your web.config under <system.web>:

IIS7:
<system.webServer>
        <modules>
            <add name="URLRewriteModule" type="URLRewriteModule.RewriteModule" preCondition="managedHandler" />
        </modules>
        <validation validateIntegratedModeConfiguration="false" />
    </system.webServer>

IIS6:
<httpModules>
        <add name="URLRewriteModule" type="URLRewriteModule.RewriteModule" />
      </httpModules>

9. Try it out!

== Frequently Asked Questions ==

= How does it work? =

That depends on which version of IIS you are using.

In IIS 6 without Integrated Pipeline mode, the request comes in, is matched by the engine which then makes a web request to the correct php page.
In IIS 7 proper path rewriting is done and the PHP handler is invoked by IIS.

= It doesn't work with my plugin! =

Get in touch and I'll see what I can do to fix it. This is an early release and has worked in the situations I've tested, I can't guarantee it will in all circumstances.

== Screenshots ==
1. wp-aspxrewriter in action
